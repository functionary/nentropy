syntax = "proto3";
package nentropy.multiraftbase;
option go_package = "multiraftbase";

import "metadata.proto";
import "gogoproto/gogo.proto";


// RaftTombstone contains information about a replica that has been deleted.
message RaftTombstone {
int32 next_replica_id = 1 [(gogoproto.customname) = "NextReplicaID", (gogoproto.casttype) = "ReplicaID"];
}

// RaftSnapshotData is the payload of a raftpb.Snapshot. It contains a raw copy of
// all of the range's data and metadata, including the raft log, sequence cache, etc.
message RaftSnapshotData {
message KeyValue {
bytes key = 1;
bytes value = 2;
}
// The latest RangeDescriptor
GroupDescriptor pg_descriptor = 1;
repeated KeyValue KV = 2 [(gogoproto.customname) = "KV"];
// These are really raftpb.Entry, but we model them as raw bytes to avoid
// roundtripping through memory.
repeated bytes log_entries = 3;
}
